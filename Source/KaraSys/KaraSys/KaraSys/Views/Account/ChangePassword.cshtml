@*@model KaraSys.Models.Account.ChangePasswordModel*@
@if (ViewBag.Status != null && ViewBag.Status != 1)
{
    <div id="thongbao" class="alert alert-danger">
        <button class="close" data-close="alert"></button>
        <span> Sai password</span>
    </div>
}
<div id="thongbao" class="alert alert-danger display-hide">
    <button class="close" data-close="alert"></button>
    <span id="messvalidate">
    </span>
</div>
<form action='@(Url.Action("ChangePassword", "Account"))' method="post" class="change-password-form">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label class="control-label">Current Password</label>
        <input type="password" id="OldPassword" name="OldPassword" class="form-control" />
    </div>
    <div class="form-group">
        <label class="control-label">New Password</label>
        <input type="password" id="NewPassword" name="NewPassword" class="form-control" />
    </div>
    <div class="form-group">
        <label class="control-label">Re-type New Password</label>
        <input id="RetypePassword" name="RetypePassword" type="password" class="form-control" />
    </div>
    <div class="form-actions">
        <a id="submit" class="btn btn-success uppercase">Change Password</a>
    </div>

</form>
@section scripts{
   
<script type="text/javascript">
    $(document).ready(function () {
        $('.change-password-form').validate({
            errorElement: 'span',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                OldPassword: {
                    required: true
                },
                NewPassword: {
                    required: true
                },
                RetypePassword: {
                    required: true,
                    equalTo: "#NewPassword"
                }
            },
            messages: {
                OldPassword: {
                    required: "Nhập mật khẩu cũ."
                },
                NewPassword: {
                    required: "Nhập mật khẩu mới."
                },
                RetypePassword: {
                    required: "Nhập lại mật khẩu mới.",
                    equalTo: "Mật khẩu mới không trùng khớp"
                }
            },

            invalidHandler: function (event, validator) { //display error alert on form submit
                $('.alert-danger', $('.change-password-form')).show();

            },

            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            success: function (label) {
                label.closest('.form-group').removeClass('has-error');
                if (!$(document).find(".has-error").length>0) {
                    $('#thongbao').addClass("display-hide");
                }
                label.remove();
            },

            errorPlacement: function (error, element) {
                $("#messvalidate").text(error.text());
                error.insertAfter(element.closest('.input-icon'));
            },

            submitHandler: function (form) {
                form.submit(); // form validation success, call ajax form submit
            }
        });
        $("#submit").on("click", function () {
            if ($('.change-password-form').validate().form()) {
                $('.change-password-form').submit(); //form validation success, call ajax form submit
            }
        });
        $('.change-password-form input').keypress(function (e) {
            if (e.which == 13) {
                if ($('.change-password-form').validate().form()) {
                    $('.change-password-form').submit(); //form validation success, call ajax form submit
                }
                return false;
            }
        });
    });
</script>
}
