@using Phystones.Helper
@model BusinessObject.WebModule.Models.Config.WebsiteConfigModel
    

<div class="panel-body" id="websiteConfig">
    @using (Ajax.BeginForm("WebsiteConfig", "Config", new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "websiteConfig"
    }, new { @class = "" }))
    {
        <div class="form-group">
            <label class="control-label">Tên</label>
            @Html.TextBoxFor(x => x.Name, new { @placeholder = "Tên", @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div class="form-group">
            <label class="control-label">Tiêu đề</label>
            @Html.TextBoxFor(x => x.Title, new { @placeholder = "Tiêu đề", @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Title)
        </div>
        <div class="form-group">
            <label class="control-label">Slogan</label>
            @Html.TextBoxFor(x => x.Slogan, new { @placeholder = "Slogan", @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Slogan)
        </div>
        <div class="form-group">
            <label class="control-label">HostName</label>
            @Html.TextBoxFor(x => x.HostName, new { @placeholder = "HostName", @class = "form-control" })
            @Html.ValidationMessageFor(x => x.HostName)
        </div>
        <div class="form-group">
            <label class="control-label">FullHostName</label>
            @Html.TextBoxFor(x => x.FullHostName, new { @placeholder = "FullHostName", @class = "form-control" })
            @Html.ValidationMessageFor(x => x.FullHostName)
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-success">Save</button>
        </div>
    }
</div>
@if (ViewBag.Success != null)
{
    <script>
        var opts = {
            "closeButton": true,
            "debug": false,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        toastr.success("Cập nhật thành công.", "Thông Báo", opts);
    </script>    
}


