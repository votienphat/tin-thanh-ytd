@using Phystones.Models.ContentData;
@{
    ViewBag.Title = "Index";
}
@model  PortfolioModel
<div id="savecate">
    @using (Ajax.BeginForm("SaveData", "Portfolio",
                            new AjaxOptions
                            {
                                HttpMethod = "POST",
                                UpdateTargetId = "savecate"
                            }, new { @class = "form-horizontal form-groups-bordered" }))
    {
        @Html.HiddenFor(x => x.Id)
        <div class="form-group">
            <label for="field-ta" class="col-sm-2 control-label">Name</label>
            <div class="col-sm-5">
                @Html.TextAreaFor(x => x.Name, new { @class = "form-control autogrow", @placeholder = "nhập title." })
            </div>
        </div>
        <div class="form-group">
            <label for="field-ta" class="col-sm-2 control-label">Danh mục</label>
            <div class="col-sm-5">
                <select id="CategoryId" name="CategoryId" class="form-control">
                    @foreach (var item in ViewBag.CateList)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Avatar</label>
            <div class="col-sm-5">
                <div class="fileinput fileinput-new" data-provides="fileinput">
                    <div class="fileinput-new thumbnail" style="width: 200px; height: 150px;" data-trigger="fileinput">
                        <img src="http://placehold.it/200x150" alt="...">
                    </div>
                    <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 200px; max-height: 150px">
                    </div>
                    <div>
                        <span class="btn btn-white btn-file">
                            <span class="fileinput-new">Select image</span>
                            <span class="fileinput-exists">Change</span>
                            <input type="file" name="..." accept="image/*">
                        </span>
                        <a href="#" class="btn btn-orange fileinput-exists" data-dismiss="fileinput">Remove</a>
                    </div>
                </div>
                <input type="hidden" id="ImgeString" name="ImgeString" />
            </div>
        </div>
        <div class="form-group">
            <label for="field-ta" class="col-sm-2 control-label">Link Website</label>
            <div class="col-sm-5">
                @Html.TextBoxFor(x => x.LinkWeb, new { @class = "form-control autogrow", @placeholder = "nhập link." })
            </div>
        </div>
        <div class="form-group">
            <label for="field-ta" class="col-sm-2 control-label">Link Profile</label>
            <div class="col-sm-5">
                @Html.TextBoxFor(x => x.LinkProfile, new { @class = "form-control autogrow", @placeholder = "nhập link." })
            </div>
        </div>
        <div class="form-group">
            <label for="field-1" class="col-sm-2 control-label">Nội dung</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.About, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="field-1" class="col-sm-2 control-label"></label>
            <div class="col-sm-5">
                <button type="submit" class="btn btn-info">Save changes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    }
</div>
@{
    if (ViewBag.Success != null)
    {
        <script>
            Success();
        </script>
    }
}
<script src="~/Content/ckeditor/ckeditor.js"></script>
<script src="~/Content/ckfinder/ckfinder.js"></script>
<script>
    CKEDITOR.replace('About',
        {
            filebrowserBrowseUrl: '/ckfinder/ckfinder.html',
            filebrowserImageBrowseUrl: '/ckfinder/ckfinder.html?type=Images',
            filebrowserUploadUrl: '/ckfinder/connector?command=QuickUpload&type=Files',
            filebrowserImageUploadUrl: '/ckfinder/connector?command=QuickUpload&type=Images'
        });
    var Success = function () {
        PopupFull.Hide();
        setTimeout(function () {
            var opts = {
                "closeButton": true,
                "debug": false,
                "positionClass": rtl() || public_vars.$pageContainer.hasClass('right-sidebar') ? "toast-top-left" : "toast-top-right",
                "toastClass": "black",
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            toastr.success("Cập nhật bài viết thành công", "Thông báo", opts);
        }, 2000);
    }
</script>
