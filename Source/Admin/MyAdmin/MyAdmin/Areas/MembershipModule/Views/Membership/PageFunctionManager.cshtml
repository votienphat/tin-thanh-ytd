@model List<EntitiesObject.Entities.MetroMembershipEntities.PageFunction>

@{
    Layout = "~/Views/Shared/Metronic/_MainLayout.cshtml";
    ViewBag.Title = "Quản lý chức năng page";
}

@section styles{
    <link href="~/Content/Metronic/assets/global/plugins/jstree/dist/themes/default/style.min.css" rel="stylesheet" />
    <link href="~/Content/Metronic/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" />
}

<h3 class="page-title">
    Quản lý chức năng page
</h3>
<div class="portlet box blue">
    <div class="portlet-title">
        <div class="caption">
            Thông tin
        </div>
    </div>
    <div class="portlet-body" style="overflow: hidden;">

        <!--Begin Datatables-->
        <div class="row">
            <div class="col-lg-12">
                <div class="box">

                    <div id="collapse4" class="body">
                        <div id="tree_3" class="col-lg-3" style="height: 700px; overflow-y: scroll; overflow-x: hidden"></div>
                        <div class="col-lg-1"></div>
                        <div class="col-lg-5">
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h3 class="panel-title" style="float: left" id="panelTitle">Update Pages</h3>
                                    <div class="form-group" style="height: 20px;margin-left: 230px;">
                                        <div class="col-md-3">
                                            <input type="checkbox" id="mySwitch" name="mySwitch" class="make-switch" data-on-text="On">
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <form role="form">
                                        <div class="form-group">
                                            <label for="txtNamePage">Name</label>
                                            <input type="text" maxlength="200" class="form-control" id="txtNamePage" placeholder="Enter Name Page">

                                        </div>

                                        <div class="form-group">
                                            <label for="txtLinkProgram">Link Programe</label>
                                            <input type="text" maxlength="200" class="form-control" id="txtLinkProgram" placeholder="Link Programe">
                                        </div>
                                        <div class="form-group">
                                            <label for="txtLinkUsed">Link Use</label>
                                            <input type="text" class="form-control" maxlength="200" id="txtLinkUsed" placeholder="Link Use">
                                        </div>
                                        <div class="form-group">
                                            <label for="txtParentID">ParentID Page</label>
                                            <input type="number" value="0" class="form-control" maxlength="200" id="txtParentID" placeholder="ParentID Page">
                                        </div>
                                        <div class="form-group">
                                            <label for="txtReferPage">Refer Page</label>
                                            <input type="number" value="0" class="form-control" maxlength="200" id="txtReferPage" placeholder="Refer Page">
                                        </div>
                                        <div class="form-group">
                                            <label for="drpFunctionPage">Function Page</label>
                                            <select class="form-control" id="drpFunctionPage">
                                                <option value="1">View</option>
                                                <option value="2">Edit</option>
                                                <option value="4">Delete</option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label for="drpPageType">Page Type</label>
                                            <select class="form-control" id="drpPageType">
                                                <option value="1">Page</option>
                                                <option value="2">Action</option>
                                            </select>
                                        </div>
                                        <div class="checkbox">
                                            <label>
                                                <input id="isEnable" name="isEnable" type="checkbox"> Enable
                                            </label>
                                        </div>
                                        <div class="checkbox">
                                            <label>
                                                <input id="isTargetBlank" name="isTargetBlank" type="checkbox"> Is Target Blank
                                            </label>
                                        </div>
                                        <button type="button" id="btnSubmit" ref="0" class="btn btn-primary btn-lg btn-block">Submit</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.row -->
    </div>
    <!-- /.inner -->
</div>
@section scripts{
    <script src="@Url.Content("~/Content/Metronic/assets/global/plugins/jstree/dist/jstree.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Metronic/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js")" type="text/javascript"></script>

    <script type="text/javascript">
        var allPages = [];
        var treeData;
        var jsTree;
        var hasInitTree = false;
        var currentPageId = -1;

        function buildPage(pages) {
            var tree = [];
            $.each(pages, function (index, element) {
                var pageId = 'page_' + element.PageId;
                allPages[pageId] = element;

                var item = {
                    'id': 'page_' + element.PageId,
                    'text': element.PageId + "." + element.PageName,
                    'icon': ''
                };

                if (element.PageId == currentPageId) {
                    item['state'] = { 'selected': true };
                }
                if (element.SubPages.length > 0) {
                    item['children'] = buildPage(element.SubPages);
                    item['icon'] = 'fa fa-folder';
                } else {
                    item['icon'] = 'fa fa-file';
                }

                if (element.IsEnable) {
                    item['icon'] = item['icon'] + ' icon-state-warning';
                } else {
                    item['icon'] = item['icon'] + ' icon-state-default';
                }

                tree.push(item);
            });
            return tree;
        }

        function getPages() {
            $.ajax({
                url: '@Url.Action("GetPages", "Membership")',
                contentType: "application/json;charset=uft-8",
                dataType: 'JSON',
                type: 'POST',
                error: function (res) {
                    showErrorToastr(res);
                },
                success: function (data) {
                    if (!checkRight(data)) {
                        return;
                    }

                    treeData = buildPage(data);

                    if (hasInitTree == true) {
                        $('#tree_3').jstree(true).settings.core.data = treeData;
                        $("#tree_3").jstree(true).refresh();
                    } else {
                        $("#tree_3")
                            // listen for event
                            .on('select_node.jstree', function (node, selected, event) {
                                var pageId = selected.node.id.replace('page_', '');
                                AddPageIdForRef(pageId);
                                if (!($('#mySwitch').bootstrapSwitch('state'))) {
                                    FilterData(allPages['page_' + pageId]);
                                }
                            })
                            .jstree({
                                "core": {
                                    "themes": {
                                        "responsive": false
                                    },
                                    "data": treeData
                                },
                                "types": {
                                    "default": {
                                        "icon": "fa fa-folder icon-state-warning icon-lg"
                                    },
                                    "file": {
                                        "icon": "fa fa-file icon-state-warning icon-lg"
                                    }
                                },
                                "plugins": ["types"]
                            });
                        hasInitTree = true;
                    }
                }
            });
        }

        var CheckDataPage = function () {
            if ($("#txtNamePage").val().trim().length <= 0) {
                showErrorToastr("Tên page không được bỏ trống.");
                $("#txtNamePage").focus();
                return false;
            } else if ($("#txtParentID").val().trim().length <= 0) {
                showErrorToastr("ParentID Page không được bỏ trống.");
                $("#txtParentID").focus();
                return false;
            } else if ($("#txtReferPage").val().trim().length <= 0) {
                showErrorToastr("Refer Page không được bỏ trống.");
                $("#txtReferPage").focus();
                return false;
            } else
                return true;
        };

        var InsertPage = function () {
            if (CheckDataPage()) {
                var thisElement = $(this);
                if (typeof thisElement.attr("ref") != "undefined" && thisElement.attr("ref").trim().length > 0) {
                    $.ajax({
                        url: '@Url.Action("InsertPageAdmin", "Membership")',
                        type: "post",
                        data: {
                            "PageId": thisElement.attr("ref"),
                            "PageName": $("#txtNamePage").val().trim(),
                            "Link": $("#txtLinkProgram").val().trim(),
                            "ParentId": $("#txtParentID").val().trim(),
                            "LinkUse": $("#txtLinkUsed").val().trim(),
                            "ReferPage": $("#txtReferPage").val().trim(),
                            "FunctionPage": $("#drpFunctionPage").val().trim(),
                            "PageType": $("#drpPageType").val().trim(),
                            "IsEnable": $("#isEnable").is(":checked"),
                            "IsTargetBlank": $("#isTargetBlank").is(":checked")
                        },
                        dataType: 'json',
                        beforeSend: function () {
                            thisElement.unbind("click");
                        },
                        success: function (res) {
                            if (!checkRight(res)) {
                                return;
                            }

                            if (res != null) {
                                if (res.Status) {
                                    showSuccessToastr(res.Message);

                                    // ket thuc xu ly
                                    $("#txtNamePage").val("");
                                    $("#txtLinkProgram").val("");
                                    $("#txtLinkUsed").val("");
                                    $("#txtReferPage").val("0");
                                    $("#txtParentID").val("0");
                                    $("#isEnable").removeAttr("checked");
                                    $("#isTargetBlank").removeAttr("checked");
                                    getPages();
                                    GetMenu();
                                } else {
                                    showErrorToastr(res.Message);
                                }
                            } else {
                                showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                            }

                        },
                        error: function () {
                            showErrorToastr("Lỗi đường truyền, xin thử lại sau.");
                        },
                        complete: function () {
                            thisElement.unbind("click").click(InsertPage);
                        }
                    });
                } else {
                    showErrorToastr("Lỗi trong quá trình xử lý.");
                }

            }
        }

        function UpdatePage() {
            var isEnable;
            var isTargetBlank;
            if ($("#isEnable").parent().hasClass("checked")) {
                isEnable = true;
            } else {
                isEnable = false;
            }

            if ($("#isTargetBlank").parent().hasClass("checked")) {
                isTargetBlank = true;
            } else {
                isTargetBlank = false;
            }
            if (CheckDataPage()) {
                ShowLoading();

                var thisElement = $(this);
                $.ajax({
                    url: '@Url.Action("UpdatePageAdmin", "Membership")',
                    type: "post",
                    data: {
                        "PageId": thisElement.attr("ref"),
                        "PageName": $("#txtNamePage").val().trim(),
                        "Link": $("#txtLinkProgram").val().trim(),
                        "ParentId": $("#txtParentID").val().trim(),
                        "LinkUse": $("#txtLinkUsed").val().trim(),
                        "ReferPage": $("#txtReferPage").val().trim(),
                        "FunctionPage": $("#drpFunctionPage").val().trim(),
                        "PageType": $("#drpPageType").val().trim(),
                        "IsEnable": isEnable //$("#isEnable").is(":checked")
                        ,
                        "IsTargetBlank": isTargetBlank //$("#isTargetBlank").is(":checked")
                    },
                    dataType: 'json',
                    beforeSend: function () {
                        thisElement.unbind("click");
                    },
                    success: function (res) {
                        if (!checkRight(res)) {
                            return;
                        }

                        if (res != null) {
                            if (res.Status) {
                                showSuccessToastr(res.Message);
                                $("#txtNamePage").val("");
                                $("#txtLinkProgram").val("");
                                $("#txtLinkUsed").val("");
                                $("#txtReferPage").val("0");
                                $("#txtParentID").val("0");
                                $("#isEnable").removeAttr("checked");
                                $("#isTargetBlank").removeAttr("checked");
                                getPages();
                                GetMenu();
                            } else {
                                showErrorToastr(res.Message);
                                thisElement.click(UpdatePage);
                            }
                        } else {
                            showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                        }

                    },
                    error: function () {
                        showErrorToastr("Lỗi đường truyền, xin thử lại sau.");
                    },
                    complete: function () {
                        HideLoading();
                    }
                });
            }
        };

        function ValidUrl(str) {
            var pattern = new RegExp('^(\\/\\/)');
            if (!pattern.test(str)) {
                return false;
            } else {
                return true;
            }
        }

        var AddPageIdForRef = function (pageId) {
            if (pageId > 0) {
                $("#btnSubmit").attr("ref", pageId);
                $("#txtParentID").val(pageId);
            } else {
                $("#btnSubmit").attr("ref", 0);
                $("#txtParentID").val(0);
            }
        }

        var FilterData = function (objResult) {
            if (objResult != null) {
                $("#txtNamePage").val(objResult.PageName);
                $("#txtLinkProgram").val(objResult.Link);
                $("#txtLinkUsed").val(objResult.LinkUse);
                $("#txtReferPage").val(objResult.ReferPage);
                $("#txtParentID").val(objResult.ParentId);
                $("#drpFunctionPage").val(objResult.FunctionPage);
                $("#drpPageType").val(objResult.PageType);

                if (objResult.IsEnable != null && objResult.IsEnable) {
                    //$("#isEnable").prop('checked', true);
                    $("#uniform-isEnable span").addClass('checked');
                } else {
                    $("#uniform-isEnable span").removeClass("checked");
                }
                if (objResult.IsTargetBlank != null && objResult.IsTargetBlank) {
                    $("#uniform-isTargetBlank span").addClass('checked');
                } else {
                    $("#uniform-isTargetBlank span").removeClass('checked');
                }
                $("#btnSubmit").attr("ref", objResult.PageId).html("Update").unbind("click").click(UpdatePage);
            } else {
                showErrorToastr("Không kết nối được dữ liệu.");
            }
        }

        function SwitchCheck(ischeck) {
            if (ischeck) {
                $("#panelTitle").html("Insert Page");
                $("#btnSubmit").html("Insert New").unbind("click").click(InsertPage);
                $("#txtNamePage").val("");
                $("#txtLinkProgram").val("");
                $("#txtLinkUsed").val("");
                $("#txtReferPage").val("0");
                $("#isEnable").removeAttr("checked");
                $("#isTargetBlank").removeAttr("checked");
            } else {
                $("#panelTitle").html("Update Page");
                $("#btnSubmit").html("Update");
            }
        }

        var checkinsert = function () {
            $('input[name="mySwitch"]').on('switchChange.bootstrapSwitch', function (event, state) {
                SwitchCheck(state);
                return state;
            });
        }

        $(document).ready(function () {
            getPages();

            $('input[name="mySwitch"]').on('switchChange.bootstrapSwitch', function (event, state) {
                SwitchCheck(state);
            });

            $("#txtLinkProgram").keyup(function () {
                $("#txtLinkUsed").val($(this).val().trim());
            });
            $("#txtLinkProgram").change(function () {
                if (!ValidUrl($("#txtLinkUsed").val())) {
                    $("#txtLinkUsed").val("/" + $("#txtLinkUsed").val().trim());
                }
            });
        });
    </script>
}