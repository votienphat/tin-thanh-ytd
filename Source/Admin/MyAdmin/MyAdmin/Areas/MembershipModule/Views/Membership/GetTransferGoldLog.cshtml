@using MyAdmin.Helper
@using MyUtility
@model MyAdmin.Areas.MembershipModule.Models.TransferGoldLogModel
@{
    ViewBag.Title = "Lịch sử nạp/trừ gold";
    Layout = "~/Views/Shared/Metronic/_MainLayout.cshtml";
}

@{
    var value = ViewBag.ListUserAdmin;
    var curDate = DateTime.Now;
    var beginDateTemp = curDate.AddDays(-7);
    var endDate = new DateTime(curDate.Year, curDate.Month, curDate.Day, 23, 59, 59);
    var beginDate = new DateTime(beginDateTemp.Year, beginDateTemp.Month, beginDateTemp.Day, 0, 0, 0);
}

<div class="portlet box blue">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-tachometer"></i>Điều Kiện Lọc
        </div>
    </div>
    <div class="portlet-body" style="display: block;overflow: hidden;">
        <div class="form-group col-sm-2">
            <label class="">Từ khóa</label>
            <div class="input-daterange input-group col-sm-12">
                <input type="text" id="Username" class="input-sm form-control" placeholder="UserId/Tên hiển thị" />
            </div>
        </div>
        <div class="form-group col-sm-2">
            <label class="">Admin</label>
            <div class="input-daterange input-group col-sm-12">
                @Html.DropDownListFor(x => x.AdminId, (IEnumerable<SelectListItem>)ViewBag.ListUserAdmin, new { @class = "form-control input-medium" })
            </div>
        </div>
        <div class="form-group col-sm-2">
            <label class="">Action</label>
            <div class="input-daterange input-group col-sm-12">
                @Html.DropDownListFor(x => x.ActionId, (IEnumerable<SelectListItem>)ViewBag.ListAction, new { @class = "form-control input-medium" })
                @*@Html.DropDownList("ListAction")*@
            </div>
        </div>

        <div class="col-lg-5 col-xs-12">
            <label class="">Thời gian</label>
            <div class="input-daterange input-group" id="dayPicker">
                <input type="text" id="fromDate" class="input-sm form-control" name="start"
                       value="@DateTime.Now.FirstDayOfMonth().GetBeginOfDay().GetVnDateTimeFormat()" />
                <span class="input-group-addon">đến</span>
                <input type="text" id="toDate" class="input-sm form-control" name="end"
                       value="@DateTime.Now.GetEndOfDay().GetVnDateTimeFormat()" />
            </div>
        </div>
        <div class="form-group col-sm-1">
            <label class="" style="height: 15px;"></label>
            <div class="input-icon input-group  col-sm-12">
                <button type="button" id="btnSearch" class="btn btn-success">Tìm <i class="fa fa-search"></i></button>
            </div>
        </div>
    </div>
</div>
<div class="portlet box green-haze">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-globe"></i>Lịch sử nạp/trừ gold user
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse">
            </a>
            <a href="#portlet-config" data-toggle="modal" class="config">
            </a>
            <a href="javascript:;" class="reload">
            </a>
            <a href="javascript:;" class="remove">
            </a>
        </div>
    </div>
    <div class="portlet-body">
        <table class="table table-striped table-bordered" id="myTable"></table>
    </div>
</div>
@section styles
{
    <link href="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css")" rel="stylesheet" />
    <link href="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.css")" rel="stylesheet" type="text/css" />
}
@section scripts{
    @*<script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js")" type="text/javascript"></script>
            <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/bootstrap-daterangepicker/moment.min.js")" type="text/javascript"></script>
            <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js")" type="text/javascript"></script>
        <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js")" type="text/javascript"></script>s*@
    <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js")" type="text/javascript"></script>s
    <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>
    <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/bootstrap-daterangepicker/moment.min.js")" type="text/javascript"></script>
    <script src="@Url.ContentVersion("~/Content/Metronic/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var oTableId = '#myTable';
        var oTable;
        ParseQueryString(oTable);
        $(function () {
            //$('.datepicker').datepicker({
            //    format: DateTimeFormat.LowerTimeFull,
            //    lang: 'vi',
            //    timepicker: true,
            //    autoclose: true,
            //});
            $('#fromDate').datetimepicker({
                format: DateTimeFormat.LowerTimeFull,
                lang: 'vi',
                timepicker: true,
                autoclose: true,
            });
            $('#toDate').datetimepicker({
                format: DateTimeFormat.LowerTimeFull,
                lang: 'vi',
                timepicker: true,
                autoclose: true,
            });
            $('#btnSearch').on('click', function () {
                if (oTable == null) {
                    search();
                } else {
                    oTable.search('').draw();
                }
            });
            $('input').on("keypress", function (e) {
                /* ENTER PRESSED*/
                if (e.keyCode == 13) {
                    if (oTable == null) {
                        search();
                    } else {
                        oTable.search('').draw();
                    }
                }
            });

        });
        var search = function() {
           
            if ($.fn.dataTable.isDataTable(oTableId)) {
                oTable.destroy();
            }
            oTable = $(oTableId).DataTable({
                "serverSide": true,
                "processing": true,
                "filter": false,
                "lengthMenu": DataTablesConst.LengthMenu,
                "pageLength": DataTablesConst.PageLength,
                "language": DataTablesConst.Language,
                "ajax": {
                    "url": '@Url.Action("GetTransferGoldLogData", "Membership")',
                    "data": function(d) {
                        d.Keyword = $('#Username').val(),
                            d.adminId = $("#AdminId").val(),
                            d.actionId = $("#ActionId").val(),
                            d.fromTime = $("#fromDate").val(),
                            d.toTime = $("#toDate").val();
                    },
                    "type": "POST",
                    "dataSrc": function(json) {
                        if (!checkRight(json)) {
                            json = { iTotalRecords: 0, iTotalDisplayRecords: 0, sEcho: 1, aaData: [] };
                        }
                        if (json.aaData == null) {
                            json.aaData = [];
                        }
                        return json.aaData;
                    },
                    "beforeSend": function() {
                        ShowLoading();
                    },
                    error: function() {
                        showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                        HideLoading();
                    },
                    complete: function() {
                        HideLoading();
                    }
                },
                "footerCallback": function(tfoot, data, start, end, display) {
                    if (isNaN(end)) {
                        end = 0;
                    }
                },
                "columns": [
                    {
                        "data": "NickNameUser",
                        "title": "Tên tài khoản",
                        "className": "align-center",
                    },
                    {
                        "data": "UserID",
                        "title": "User ID",
                        "className": "align-center",
                    }, {
                        "data": "NickName",
                        "title": "Tên Admin",
                        "className": "align-center",
                    },
                    {
                        "data": "OldValue",
                        "title": "Giá trị cũ",
                        "className": "align-center",
                        "render": function(dataRes) {
                            var formatNumber = ConvertToCurrency(dataRes);
                            return formatNumber;
                        },
                    },
                    {
                        "data": "NewValue",
                        "title": "Giá trị mới",
                        "render": function(dataRes) {
                            var formatNumber = ConvertToCurrency(dataRes);
                            return formatNumber;
                        },
                        "className": "align-left"
                    },
                    {
                        "title": "Giá trị",
                        "render": function(datatemp, type, row, meta) {
                            var action = row.NewValue - row.OldValue;
                            if (action > 0) {
                                return ConvertToCurrency(action);
                            } else {
                                return "-" + ConvertToCurrency(action);
                            }
                        },
                        "className": "align-left"
                    },
                    {
                        "data": "TranferName",
                        "title": "Loại chuyển",
                        "className": "align-left"
                    },
                    {
                        "data": "ReasonContent",
                        "title": "Lý do",
                        "className": "align-left"
                    },
                    {
                        "data": "IPAddress",
                        "title": "IPAddress",
                        "className": "align-left"
                    },
                    {
                        "data": "DateCreated",
                        "title": "Ngày thực hiện",
                        "className": "align-left",
                        "render": function(datatemp) {
                            return moment(datatemp).format(DateTimeFormat.UpperDateTime);
                        }
                    }
                ],
                "ordering": false,
            });
        }


    </script>
}
