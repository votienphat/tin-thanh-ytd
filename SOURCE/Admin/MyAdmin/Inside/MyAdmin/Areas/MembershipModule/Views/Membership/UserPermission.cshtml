@*@model List<EntitiesObject.Entities.MemberShipEntities.PageFunction>*@
@using EntitiesObject.Entities.MetroMembershipEntities
    
@{
    Layout = "~/Views/Shared/Metronic/_MainLayout.cshtml";
}
<link href="~/Content/Plugin/checkboxtree/style/jqx.base.css" rel="stylesheet" />
<link href="~/Content/Plugin/checkboxtree/style/jqx.energyblue.css" rel="stylesheet" />
<script src="~/Content/Plugin/checkboxtree/js/jqxcore.js"></script>
<script src="~/Content/Plugin/checkboxtree/js/jqxbuttons.js"></script>
<script src="~/Content/Plugin/checkboxtree/js/jqxscrollbar.js"></script>
<script src="~/Content/Plugin/checkboxtree/js/jqxpanel.js"></script>
<script src="~/Content/Plugin/checkboxtree/js/jqxdragdrop.js"></script>
<script src="~/Content/Plugin/checkboxtree/js/jqxtree.js"></script>
<script src="~/Content/Plugin/checkboxtree/js/jqxcheckbox.js"></script>
<style>
    #myTable tr.odd.selected {
        background-color:#abb9d3 !important
    }
    #myTable tr.selected {
        background-color:#b0bed9  !important
    }
</style>
<div class="outer" id="goldfree">
    <div class="inner bg-light lter">
        <!--Begin Datatables-->
        <div class="row">
            <div class="col-lg-12">
                <div class="box">
                    <header>
                        <h5>
                            <span>Cấp quyền cho user</span>
                        </h5>
                    </header>
                    <div id="collapse4" class="body">
                        <div>
                            <button class="btn btn-primary" type="button" onclick="OpenPopup('Add Account Manager', '@Url.Action("GetUserInfo", "Account", new { userId = 0 })', 750);">Thêm Thành viên</button>
                        </div>
                        <div class="clearfix"></div>
                        <br />
                        <table id="myTable" class="table table-bordered table-condensed table-hover">
                            <thead>
                                <tr class="text-center">
                                    <th class="text-left">STT</th>
                                    <th class="text-left">ID</th>
                                    <th class="text-center">NickName</th>
                                    <th class="text-center">Email</th>
                                    <th class="text-center">Group Name</th>
                                    <th class="text-center">DateCreated</th>
                                    <th class="text-center">LastLogin</th>
                                    <th class="text-center">Control</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <div id='jqxWidget'>
                            <div style='float: left;'>
                                <div id='jqxTreeFunctionPage' style='visibility: hidden; float: left; margin-left: 20px;margin-top: 20px'>
                                    <ul>
                                        <li id='liRoot'>Root
                                            @helper  BuildMenu(List<PageFunction> menu, int? parentid = 0)
                                            {
                                                var items = menu.Where(m => m.ParentID == parentid).ToList();
                                                if (items.Any())
                                                {
                                                    <ul>
                                                        @foreach (var item in items)
                                                        {
                                                            <li itemref="0" value="1" data-toggle="tooltip" data-placement="top" title="" id="@item.ID">#@(item.ID+"."+ item.Name)
                                                                @BuildMenu(menu, item.ID)
                                                            </li>
                                                        }
                                                    </ul>
                                                }
                                            }
                                            @BuildMenu(Model)
                                        </li>
                                    </ul>
                                </div>
                                <button type="button" id="btnSubmit" ref="0" class="btn btn-primary btn-lg btn-block">Save</button>
                            </div>
                        </div>
                        <div style="width: 452px;float:left;margin-top: 20px">
                            <div class="panel panel-info">
                                <div class="panel-heading">
                                    <h3 class="panel-title" id="panelTitle">Update Permission Page</h3>
                                </div>
                                <div class="panel-body">
                                    <form role="form" >
                                        <fieldset id="fielFrm" disabled>
                                        <div class="form-group">
                                            <label for="drpFunctionPage">Permission</label>
                                            <select class="form-control" id="drpPermission">
                                                <option value="0">---Permission Page---</option>
                                                <option value="1">Just View</option>
                                                <option value="3">View - Edit</option>
                                                <option value="5">View - Delete</option>
                                                <option value="7">View - Edit - Delete</option>
                                            </select>
                                        </div>
                                        <div class="checkbox">
                                            <label>
                                                <input id="isDefault" type="checkbox"> Default Page
                                            </label>
                                        </div>
                                        <button type="button" id="btnUpdate" ref="0" class="btn btn-primary btn-lg btn-block">Submit</button>
                                            </fieldset>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.row -->
    </div>
    <!-- /.inner -->
</div>
<script type="text/javascript">
    var DisableFiel = function() {
        $("#drpPermission").val(0);
        $("#isDefault").removeAttr("checked");
        $("#fielFrm").attr("disabled", "disabled");
        $("#btnUpdate").attr("ref", 0).unbind("click");
    };
    
    var uncheckAllPermission = function() {
        $('#jqxTreeFunctionPage').jqxTree('uncheckAll');
    };
    var GetCurrentChoose = function() {
        var currentValue = 0;
        var elementA = $("#myTable tr.selected a.chooseItem:first");
        if (typeof elementA != "undefined" && elementA.length > 0 ) {
            currentValue = elementA.attr("ref");
        }
        return currentValue;
    };
    var GetCurrentChecked = function() {
        var currentValue = [];
        var checkedItems = $('#jqxTreeFunctionPage').jqxTree('getCheckedItems');
        if (checkedItems != null && checkedItems.length > 0) {
            $.each(checkedItems, function () {
                if (this.id != "liRoot")
                currentValue.push(this.id);
            });
        }
        return currentValue;
    };
    var SavePermissionUser = function () {
        var thisElement = $(this);
        var currentUser = GetCurrentChoose();
        if (currentUser == null || currentUser <= 0) {
            showErrorToastr("Chọn lựa lại user muốn cấp quyền.");
        } else {
            var currentChecked = GetCurrentChecked();
            var ans = confirm("Bạn có chắc muốn cấp quyền cho user không?");
            if (ans) {
                $.ajax({
                    url: '@Url.Action("InsertPermissionAdmin", "Membership")',
                    type: "post",
                    data: { "UserId": currentUser, "ListPage": currentChecked.join(",") },
                    dataType: 'json',
                    beforeSend: function () {
                        ShowLoading();
                        thisElement.unbind("click");
                    },
                    success: function (res) {
                        if (res != null) {
                            if (res.Status) {
                                uncheckAllPermission();
                                $("#myTable tr.selected").removeClass("selected");
                                showSuccessToastr(res.Message);
                            } else {
                                showErrorToastr(res.Message);
                            }
                        } else {
                            showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                        }

                    },
                    error: function () {
                        showErrorToastr("Lỗi đường truyền, xin thử lại sau.");
                    },
                    complete: function () {
                        HideLoading();
                        thisElement.unbind("click").click(SavePermissionUser);
                    }
                });
            }
        }
    };
    var GetTextRule = function (value) {
        var valueReturn = "";
        if (typeof value != "undefined" && parseInt(value) > 0) {
            if (parseInt(value) >= 7) {
                valueReturn = "Full Permission - Insert; Update; Delete";
            }else if (parseInt(value) >= 5) {
                valueReturn = "View - Delete";
            }
            else if (parseInt(value) >= 3) {
                valueReturn = "View - Edit";
            } else {
                valueReturn = "Just View";
            }
        }
        return valueReturn;
    };
    var ShowPermissionUser = function (listPermission) {
       
        var pagePermissions = $('#jqxTreeFunctionPage').jqxTree('getItems');
        $.each(pagePermissions, function () {
            var thisItemsValue = this;
            $.each(listPermission, function () {
                if (parseInt(this.PageID) == parseInt(thisItemsValue.id)) {
                    $('#jqxTreeFunctionPage').jqxTree('checkItem', thisItemsValue, true);
                    
                    if (thisItemsValue.isExpanded == false && thisItemsValue.hasItems) {
                        $('#jqxTreeFunctionPage').jqxTree('expandItem', thisItemsValue);
                        //$('#jqxTreeFunctionPage').jqxTree('updateItem', thisItemsValue, { title: 'View - Update - Delete' });
                    }
                    $(thisItemsValue.element).attr("title", GetTextRule(this.Rules)); 
                    $(thisItemsValue.element).attr("value", this.Rules);
                    $(thisItemsValue.element).attr("itemref", (this.DefaultPage ? 1 : 0));
                    return false;
                } else {
                    $(thisItemsValue.element).attr("title", "");
                    $(thisItemsValue.element).attr("data-original-title", "");
                    $(thisItemsValue.element).attr("value", 1);
                    $(thisItemsValue.element).attr("itemref", 0);
                    if (thisItemsValue.isExpanded == true && thisItemsValue.hasItems) {
                        $('#jqxTreeFunctionPage').jqxTree('collapseItem', thisItemsValue);
                    
                    }
                }
                
            });
        });
        $('[data-toggle="tooltip"]').tooltip('destroy');
        $('[data-toggle="tooltip"]').tooltip();
    };
    var UpdateRuleUser = function() {
        if ($("#drpPermission").val() == "0") {
            showErrorToastr("Bạn chưa chọn quyền truy cập page cho user.");
        } else {
            var currentUser = GetCurrentChoose();
            if (currentUser <= 0) {
                showErrorToastr("Bạn chưa chọn user muốn cấp quyền.");
            } else {
                var thisElement = $(this);
                $.ajax({
                    url: '@Url.Action("UpdateRuleUser", "Membership")',
                    type: "post",
                    data: {
                        "userId": currentUser
                        , "CurrentPage": thisElement.attr("ref")
                        , "Rules": $("#drpPermission").val()
                        , "PageDefault": $("#isDefault").is(":checked")
                    },
                    dataType: 'json',
                    beforeSend: function () {
                        ShowLoading();
                    },
                    success: function (res) {
                        if (res != null) {
                            if (res.Status) {
                                //uncheckAllPermission();
                                //$("#myTable tr.selected").removeClass("selected");
                                
                               
                                var textRule = GetTextRule($("#drpPermission").val());
                                var selectedItems = $('#jqxTreeFunctionPage').jqxTree('getSelectedItem');
                                $(selectedItems.element).attr("title", textRule);
                                $(selectedItems.element).attr("value", $("#drpPermission").val());
                                $(selectedItems.element).attr("itemref", ($("#isDefault").is(":checked") ? 1 : 0));
                                $(selectedItems.element).attr("data-original-title", textRule);
                                DisableFiel();
                                showSuccessToastr(res.Message);
                            } else {
                                showErrorToastr(res.Message);
                            }
                        } else {
                            showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                        }

                    },
                    error: function () {
                        showErrorToastr("Lỗi đường truyền, xin thử lại sau.");
                    },
                    complete: function () {
                        HideLoading();
                    }
                });
            }
            
        }
    };
    var GetPermissionUser = function(userId) {
        $.ajax({
            url: '@Url.Action("GetPermissionUser", "Membership")',
            type: "post",
            data: { "userId": userId },
            dataType: 'json',
            beforeSend: function () {
                ShowLoading();
            },
            success: function (res) {
                if (res != null) {
                    if (res.Status) {
                        uncheckAllPermission();
                        ShowPermissionUser(res.Data);
                        DisableFiel();
                    } else {
                        uncheckAllPermission();
                    }
                } else {
                    showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                }

            },
            error: function () {
                showErrorToastr("Lỗi đường truyền, xin thử lại sau.");
            },
            complete: function () {
                HideLoading();
            }
        });
    };
    var oTable;
    $(document).ready(function () {
        oTable = $('#myTable')
            .on('preXhr.dt', function () {
                ShowLoading();
            })
            .on('xhr.dt', function () {
                HideLoading();
            })
            .dataTable({
                "jQueryUI": true,
                "scrollY": "250px",
                "scrollCollapse": false,
                "bFilter": true,
                "bSort": false,
                "scrollX": false,
                //"bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": '@Url.Action("GetFilterMemberAdmin", "Membership")',
                "sServerMethod": "POST",
                "fnServerParams": function (aoData) {

                },
                "columns": [
                    { "data": "RowNumber", "sClass": "align-left", "bSortable": false }, //0
                    { "data": "ID", "sClass": "align-left", "bSortable": false }, //1
                    { "data": "NickName", "sClass": "align-left" }, //2
                    { "data": "Email", "sClass": "align-left" }, //3
                    { "data": "GroupName", "sClass": "align-right", "sType": "numeric" },//4
                    { "data": "DateCreated", "sClass": "align-left" }, //5
                    { "data": "LastLogin", "sClass": "align-left" }, //6
                    { "data": "EditMember", "sClass": "align-left" } //6
                ],
                "order": [[3, "desc"]],
                "lengthMenu": [[20, 40, 60, 100], [20, 40, 60, 100]]
            });
        
        $('#myTable tbody').on('click', 'a.chooseItem', function () {
            var parentTr = $(this).parents("tr:first");
            if (parentTr.hasClass('selected')) {
                parentTr.removeClass('selected');
                uncheckAllPermission();
            }
            else {
                oTable.$('tr.selected').removeClass('selected');
                parentTr.addClass('selected');
                GetPermissionUser($(this).attr("ref"));
            }
        });
        $('#myTable tbody').on('click', 'a.editMember', function () {
            OpenPopup($(this).attr("data-title"), $(this).attr("data-url"), 750);
        });
        $('#jqxTreeFunctionPage').jqxTree({
            allowDrag: false, allowDrop: false, height: '750px', width: '450px', theme: 'energyblue', checkboxes: true, hasThreeStates: false
            
        });
        $('#jqxTreeFunctionPage').css('visibility', 'visible');
        $("#btnSubmit").click(SavePermissionUser);
        //$("#jqxTreeFunctionPage").jqxTree('expandItem', $("#liRoot")[0]);
        $('#jqxTreeFunctionPage').on('select', function (event) {
            var args = event.args;
            var item = $('#jqxTreeFunctionPage').jqxTree('getItem', args.element);
            if (item.checked && GetCurrentChoose() > 0) {
                var valueElement = $(item.element).attr("value");
                $("#fielFrm").removeAttr("disabled");
                $("#drpPermission").val(valueElement);
                if ($(item.element).attr("itemref") == 1) {
                    $("#isDefault").attr("checked", "checked");
                }
                else {
                    $("#isDefault").removeAttr("checked");
                }
                $("#btnUpdate").attr("ref", item.id).unbind("click").click(UpdateRuleUser);
            } else {
                DisableFiel();
            }
        });
        
    });
</script>