@model BusinessObject.MembershipModule.Enums.MemberPermissionInfoModel

@if (Model != null && Model.GroupMember.Any())
{

    var isEdit = Model != null && Model.MemberInfo != null;
    var nickName = string.Empty;
    var fullName = string.Empty;
    var email = string.Empty;
    var groupId = 0;
    var isLock = false;
    var userId = 0;
    if (isEdit)
    {
        nickName = Model.MemberInfo.NickName;
        fullName = Model.MemberInfo.FullName;
        email = Model.MemberInfo.Email;
        //passwordSalt = Model.MemberInfo.PasswordSalt;
        isLock = Model.MemberInfo.IsLockedOut.HasValue && Model.MemberInfo.IsLockedOut.Value;
        userId = Model.MemberInfo.ID;
        groupId = Model.MemberInfo.GroupID.HasValue ? Model.MemberInfo.GroupID.Value : 0 ;
    }
    var drpValue = new SelectList(Model.GroupMember, "ID", "GroupName", groupId);

    @section styles{
    <link href="~/Content/Metronic/assets/global/plugins/jstree/dist/themes/default/style.min.css" rel="stylesheet" />
    <link href="~/Content/Metronic/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" />
    }
    
    <form role="form">
        <div class="form-group">
            <label for="txtNickName">NickName <span style="color: #ff0000">*</span></label>
            <input @(nickName.Length > 0 ? " readonly='readonly'" : string.Empty ) value="@nickName" type="text" class="form-control" id="txtNickName" placeholder="Enter Nick Name">
        </div>
        <div class="form-group">
            <label for="txtFullName">Họ & Tên <span style="color: #ff0000">*</span></label>
            <input value="@fullName" type="text" class="form-control" id="txtFullName" placeholder="Enter Full Name">
        </div>
        <div class="form-group">
            <label for="txtEmail">Email <span style="color: #ff0000">*</span></label>
            <input @(email.Length > 0 ? " readonly='readonly'" : string.Empty ) value="@email" type="email" class="form-control" id="txtEmail" placeholder="Enter email">
        </div>
        <div class="form-group">
            <label for="drpGroupAdmin">Group Name <span style="color: #ff0000">*</span></label>
            @Html.DropDownListFor(t => groupId,drpValue,"----Select Please----",
                new {@class = "form-control", id = "drpGroupAdmin"})
        </div>
        
        <div class="form-group">
            <label for="txtPassword">Password @(isEdit ? Html.Raw(string.Empty) : Html.Raw("<span style='color: #ff0000'>*</span>") )</label>
            <input value="" type="password" class="form-control" id="txtPassword" placeholder="Password">
            @(isEdit ? Html.Raw("<p class='help-block'>Nếu không muốn thay đối password thì bỏ trống</p>") : Html.Raw(string.Empty))
        </div>
        <div class="form-group">
            <label for="txtRePassword">Re-Password @(isEdit ? Html.Raw(string.Empty) : Html.Raw("<span style='color: #ff0000'>*</span>") )</label>
            <input type="password" class="form-control" id="txtRePassword" placeholder="Re-Password">
            @(isEdit ? Html.Raw("<p class='help-block'>Nếu không muốn thay đối password thì bỏ trống</p>") : Html.Raw(string.Empty))
        </div>
        @*<div class="form-group">
            <label for="txtPasswordSalt">Password-Salt</label>
            <input @(isEdit ? " readonly='readonly'" : string.Empty ) value="@passwordSalt" type="text" class="form-control" id="txtPasswordSalt" placeholder="Re-Password">
        </div>*@
        
        <div class="form-group">
            <label>
                <input id="isLock" name="isLock" type="checkbox" @(isLock == true ? "checked='checked'" : string.Empty)> Lock Member
            </label>
        </div>
       
        <button itemref="@userId" type="button" id="btnSave" class="btn btn-primary">Lưu</button>
    </form>
    
   @* @section scripts{*@
        <script type="text/javascript">
            var checkInfo = function() {
                var nicName = convertNameRewrite($("#txtNickName").val().trim());
                if (nicName.trim().length <= 0) {
                    showErrorToastr("Nick Name không được bỏ trống và không bao gồm ký tự đặc biệt.");
                    $("#txtNickName").focus();
                    return false;
                } else if ($("#txtFullName").val().trim().length <= 0) {
                    showErrorToastr("Họ và tên của thành viên không được bỏ trống.");
                    $("#txtFullName").focus();
                    return false;
                } else if ($("#txtEmail").val().trim().length <= 0) {
                    showErrorToastr("Email không được bỏ trống.");
                    $("#txtEmail").focus();
                    return false;
                } else if (!checkMail($("#txtEmail").val().trim())) {
                    showErrorToastr("Email sai định dạng.");
                    $("#txtEmail").focus();
                    return false;
                }
                else if ($("#drpGroupAdmin").val().trim() == "") {
                    showErrorToastr("Bạn chưa chọn nhóm.");
                    $("#drpGroupAdmin").focus();
                    return false;
                }
                else if (($("#btnSave").attr("itemref") == "0" || $("#txtRePassword").val().trim().length > 0) && $("#txtPassword").val().trim().length <= 0) {
                    showErrorToastr("Mật khẩu không được bỏ trống.");
                    $("#txtPassword").focus();
                    return false;
                } else if (($("#btnSave").attr("itemref") == "0" || $("#txtPassword").val().trim().length > 0) && $("#txtRePassword").val().trim().length <= 0) {
                    showErrorToastr("Nhắc lại mật khẩu không được bỏ trống.");
                    $("#txtRePassword").focus();
                    return false;
                } else if (($("#btnSave").attr("itemref") == "0" || $("#txtPassword").val().trim().length > 0 || $("#txtRePassword").val().trim().length > 0)
                    && $("#txtRePassword").val().trim() != $("#txtPassword").val().trim()) {
                    showErrorToastr("Mật khẩu không khớp.");
                    $("#txtRePassword").focus();
                    return false;
                } else {
                    return true;
                }
            };

            var SaveUserAdmin = function () {
                var thisElement = $(this);
                if (checkInfo()) {
                    $.ajax({
                        url: '@Url.Action("SaveUserAdmin", "Membership")',
                        type: "post",
                        data: {
                            "UserId": $('#btnSave').attr("itemref"),
                            "NickName": $("#txtNickName").val().trim(),
                            "FullName": $("#txtFullName").val().trim(),
                            "Email": $("#txtEmail").val().trim(),
                            "GroupId": $("#drpGroupAdmin").val().trim(),
                            "Password": $("#txtPassword").val().trim(),
                            "IsLock": $("#isLock").is(":checked")
                        },
                        dataType: 'json',
                        beforeSend: function() {
                            ShowLoading();
                            thisElement.unbind("click");
                        },
                        success: function(res) {
                            if (res != null) {
                                if (res.Status) {
                                    showSuccessToastr(res.Message);
                                
                                    $('#quyen').show();
                                    $("#thongtin").removeClass("active");
                                    $("#tabthongtin").removeClass("active");

                                    $("#quyen").addClass("active");
                                    $("#tabquyen").addClass("tab-pane active");
                                    oTable.fnFilter();
                                    //ClosePopup();
                                
                                    if (typeof oTable != "undefined")
                                    { oTable.fnFilter(); }
                                } else {
                                    showErrorToastr(res.Message);
                                    thisElement.unbind("click").click(SaveUserAdmin);
                                }
                            } else {
                                showErrorToastr("Lỗi trong quá trình xử lý, xin thử lại sau.");
                            }

                        },
                        error: function() {
                            showErrorToastr("Lỗi đường truyền, xin thử lại sau.");
                        },
                        complete: function() {
                            HideLoading();
                        }
                    });
                }
            };

            $(document).ready(function() {
                $("#btnSave").click(SaveUserAdmin);
                $("#txtNickName").keyup(function() {
                    $(this).val(convertNameRewrite($(this).val().toLowerCase().trim()));
                });
                $("#txtEmail").keyup(function () {
                    $(this).val($(this).val().toLowerCase().trim());
                });
            });
        </script>
   /* }*/
}
