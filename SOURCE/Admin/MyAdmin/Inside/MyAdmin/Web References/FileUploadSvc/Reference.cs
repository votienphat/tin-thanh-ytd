//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MyAdmin.FileUploadSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileUploadSvcSoap", Namespace="http://tempuri.org/")]
    public partial class FileUploadSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAvatarEventImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAssEventImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAssociationImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAssociationImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssEventImageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAssEventImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAvatarWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAvatarUserUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadUserEventImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAvatarUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentUpAvatarGifOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentUploadAvatarOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentUploadAvatarSWFOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAvatarUserInGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBannerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadCaptuteScreenInGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveJPEGOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileUploadSvc() {
            this.Url = global::MyAdmin.Properties.Settings.Default.InsidePxxx_FileUploadSvc_FileUploadSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UploadAvatarEventImageCompletedEventHandler UploadAvatarEventImageCompleted;
        
        /// <remarks/>
        public event UploadAssEventImageCompletedEventHandler UploadAssEventImageCompleted;
        
        /// <remarks/>
        public event UploadAssociationImageCompletedEventHandler UploadAssociationImageCompleted;
        
        /// <remarks/>
        public event UpdateAssociationImageCompletedEventHandler UpdateAssociationImageCompleted;
        
        /// <remarks/>
        public event GetAssEventImageListCompletedEventHandler GetAssEventImageListCompleted;
        
        /// <remarks/>
        public event DeleteAssEventImageCompletedEventHandler DeleteAssEventImageCompleted;
        
        /// <remarks/>
        public event DeleteAvatarWebCompletedEventHandler DeleteAvatarWebCompleted;
        
        /// <remarks/>
        public event DeleteAvatarUserUpCompletedEventHandler DeleteAvatarUserUpCompleted;
        
        /// <remarks/>
        public event UploadUserEventImageCompletedEventHandler UploadUserEventImageCompleted;
        
        /// <remarks/>
        public event UploadAvatarUserCompletedEventHandler UploadAvatarUserCompleted;
        
        /// <remarks/>
        public event UploadImageCompletedEventHandler UploadImageCompleted;
        
        /// <remarks/>
        public event DeleteImageCompletedEventHandler DeleteImageCompleted;
        
        /// <remarks/>
        public event AgentUpAvatarGifCompletedEventHandler AgentUpAvatarGifCompleted;
        
        /// <remarks/>
        public event AgentUploadAvatarCompletedEventHandler AgentUploadAvatarCompleted;
        
        /// <remarks/>
        public event AgentUploadAvatarSWFCompletedEventHandler AgentUploadAvatarSWFCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event UploadAvatarUserInGameCompletedEventHandler UploadAvatarUserInGameCompleted;
        
        /// <remarks/>
        public event UploadBannerCompletedEventHandler UploadBannerCompleted;
        
        /// <remarks/>
        public event UploadCaptuteScreenInGameCompletedEventHandler UploadCaptuteScreenInGameCompleted;
        
        /// <remarks/>
        public event SaveJPEGCompletedEventHandler SaveJPEGCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAvatarEventImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadAvatarEventImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, int associationID, int userID, string fileExtension) {
            object[] results = this.Invoke("UploadAvatarEventImage", new object[] {
                        byteArray,
                        associationID,
                        userID,
                        fileExtension});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAvatarEventImageAsync(byte[] byteArray, int associationID, int userID, string fileExtension) {
            this.UploadAvatarEventImageAsync(byteArray, associationID, userID, fileExtension, null);
        }
        
        /// <remarks/>
        public void UploadAvatarEventImageAsync(byte[] byteArray, int associationID, int userID, string fileExtension, object userState) {
            if ((this.UploadAvatarEventImageOperationCompleted == null)) {
                this.UploadAvatarEventImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAvatarEventImageOperationCompleted);
            }
            this.InvokeAsync("UploadAvatarEventImage", new object[] {
                        byteArray,
                        associationID,
                        userID,
                        fileExtension}, this.UploadAvatarEventImageOperationCompleted, userState);
        }
        
        private void OnUploadAvatarEventImageOperationCompleted(object arg) {
            if ((this.UploadAvatarEventImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAvatarEventImageCompleted(this, new UploadAvatarEventImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAssEventImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadAssEventImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, int associationID, int userID, string fileExtension) {
            object[] results = this.Invoke("UploadAssEventImage", new object[] {
                        byteArray,
                        associationID,
                        userID,
                        fileExtension});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAssEventImageAsync(byte[] byteArray, int associationID, int userID, string fileExtension) {
            this.UploadAssEventImageAsync(byteArray, associationID, userID, fileExtension, null);
        }
        
        /// <remarks/>
        public void UploadAssEventImageAsync(byte[] byteArray, int associationID, int userID, string fileExtension, object userState) {
            if ((this.UploadAssEventImageOperationCompleted == null)) {
                this.UploadAssEventImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAssEventImageOperationCompleted);
            }
            this.InvokeAsync("UploadAssEventImage", new object[] {
                        byteArray,
                        associationID,
                        userID,
                        fileExtension}, this.UploadAssEventImageOperationCompleted, userState);
        }
        
        private void OnUploadAssEventImageOperationCompleted(object arg) {
            if ((this.UploadAssEventImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAssEventImageCompleted(this, new UploadAssEventImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAssociationImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadAssociationImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string assName, string fileName) {
            object[] results = this.Invoke("UploadAssociationImage", new object[] {
                        byteArray,
                        assName,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAssociationImageAsync(byte[] byteArray, string assName, string fileName) {
            this.UploadAssociationImageAsync(byteArray, assName, fileName, null);
        }
        
        /// <remarks/>
        public void UploadAssociationImageAsync(byte[] byteArray, string assName, string fileName, object userState) {
            if ((this.UploadAssociationImageOperationCompleted == null)) {
                this.UploadAssociationImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAssociationImageOperationCompleted);
            }
            this.InvokeAsync("UploadAssociationImage", new object[] {
                        byteArray,
                        assName,
                        fileName}, this.UploadAssociationImageOperationCompleted, userState);
        }
        
        private void OnUploadAssociationImageOperationCompleted(object arg) {
            if ((this.UploadAssociationImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAssociationImageCompleted(this, new UploadAssociationImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAssociationImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAssociationImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string currentName, string newName) {
            object[] results = this.Invoke("UpdateAssociationImage", new object[] {
                        byteArray,
                        currentName,
                        newName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAssociationImageAsync(byte[] byteArray, string currentName, string newName) {
            this.UpdateAssociationImageAsync(byteArray, currentName, newName, null);
        }
        
        /// <remarks/>
        public void UpdateAssociationImageAsync(byte[] byteArray, string currentName, string newName, object userState) {
            if ((this.UpdateAssociationImageOperationCompleted == null)) {
                this.UpdateAssociationImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAssociationImageOperationCompleted);
            }
            this.InvokeAsync("UpdateAssociationImage", new object[] {
                        byteArray,
                        currentName,
                        newName}, this.UpdateAssociationImageOperationCompleted, userState);
        }
        
        private void OnUpdateAssociationImageOperationCompleted(object arg) {
            if ((this.UpdateAssociationImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAssociationImageCompleted(this, new UpdateAssociationImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssEventImageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAssEventImageList(int associationID, int userID) {
            object[] results = this.Invoke("GetAssEventImageList", new object[] {
                        associationID,
                        userID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssEventImageListAsync(int associationID, int userID) {
            this.GetAssEventImageListAsync(associationID, userID, null);
        }
        
        /// <remarks/>
        public void GetAssEventImageListAsync(int associationID, int userID, object userState) {
            if ((this.GetAssEventImageListOperationCompleted == null)) {
                this.GetAssEventImageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssEventImageListOperationCompleted);
            }
            this.InvokeAsync("GetAssEventImageList", new object[] {
                        associationID,
                        userID}, this.GetAssEventImageListOperationCompleted, userState);
        }
        
        private void OnGetAssEventImageListOperationCompleted(object arg) {
            if ((this.GetAssEventImageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssEventImageListCompleted(this, new GetAssEventImageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAssEventImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAssEventImage(string fileName) {
            object[] results = this.Invoke("DeleteAssEventImage", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAssEventImageAsync(string fileName) {
            this.DeleteAssEventImageAsync(fileName, null);
        }
        
        /// <remarks/>
        public void DeleteAssEventImageAsync(string fileName, object userState) {
            if ((this.DeleteAssEventImageOperationCompleted == null)) {
                this.DeleteAssEventImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAssEventImageOperationCompleted);
            }
            this.InvokeAsync("DeleteAssEventImage", new object[] {
                        fileName}, this.DeleteAssEventImageOperationCompleted, userState);
        }
        
        private void OnDeleteAssEventImageOperationCompleted(object arg) {
            if ((this.DeleteAssEventImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAssEventImageCompleted(this, new DeleteAssEventImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAvatarWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAvatarWeb(string fileName) {
            object[] results = this.Invoke("DeleteAvatarWeb", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAvatarWebAsync(string fileName) {
            this.DeleteAvatarWebAsync(fileName, null);
        }
        
        /// <remarks/>
        public void DeleteAvatarWebAsync(string fileName, object userState) {
            if ((this.DeleteAvatarWebOperationCompleted == null)) {
                this.DeleteAvatarWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAvatarWebOperationCompleted);
            }
            this.InvokeAsync("DeleteAvatarWeb", new object[] {
                        fileName}, this.DeleteAvatarWebOperationCompleted, userState);
        }
        
        private void OnDeleteAvatarWebOperationCompleted(object arg) {
            if ((this.DeleteAvatarWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAvatarWebCompleted(this, new DeleteAvatarWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAvatarUserUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAvatarUserUp(string fileName) {
            object[] results = this.Invoke("DeleteAvatarUserUp", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAvatarUserUpAsync(string fileName) {
            this.DeleteAvatarUserUpAsync(fileName, null);
        }
        
        /// <remarks/>
        public void DeleteAvatarUserUpAsync(string fileName, object userState) {
            if ((this.DeleteAvatarUserUpOperationCompleted == null)) {
                this.DeleteAvatarUserUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAvatarUserUpOperationCompleted);
            }
            this.InvokeAsync("DeleteAvatarUserUp", new object[] {
                        fileName}, this.DeleteAvatarUserUpOperationCompleted, userState);
        }
        
        private void OnDeleteAvatarUserUpOperationCompleted(object arg) {
            if ((this.DeleteAvatarUserUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAvatarUserUpCompleted(this, new DeleteAvatarUserUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadUserEventImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadUserEventImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, int userID, string fileExtension) {
            object[] results = this.Invoke("UploadUserEventImage", new object[] {
                        byteArray,
                        userID,
                        fileExtension});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadUserEventImageAsync(byte[] byteArray, int userID, string fileExtension) {
            this.UploadUserEventImageAsync(byteArray, userID, fileExtension, null);
        }
        
        /// <remarks/>
        public void UploadUserEventImageAsync(byte[] byteArray, int userID, string fileExtension, object userState) {
            if ((this.UploadUserEventImageOperationCompleted == null)) {
                this.UploadUserEventImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadUserEventImageOperationCompleted);
            }
            this.InvokeAsync("UploadUserEventImage", new object[] {
                        byteArray,
                        userID,
                        fileExtension}, this.UploadUserEventImageOperationCompleted, userState);
        }
        
        private void OnUploadUserEventImageOperationCompleted(object arg) {
            if ((this.UploadUserEventImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadUserEventImageCompleted(this, new UploadUserEventImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAvatarUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadAvatarUser([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname, string fileName) {
            object[] results = this.Invoke("UploadAvatarUser", new object[] {
                        byteArray,
                        UpPath,
                        Newname,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAvatarUserAsync(byte[] byteArray, string UpPath, string Newname, string fileName) {
            this.UploadAvatarUserAsync(byteArray, UpPath, Newname, fileName, null);
        }
        
        /// <remarks/>
        public void UploadAvatarUserAsync(byte[] byteArray, string UpPath, string Newname, string fileName, object userState) {
            if ((this.UploadAvatarUserOperationCompleted == null)) {
                this.UploadAvatarUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAvatarUserOperationCompleted);
            }
            this.InvokeAsync("UploadAvatarUser", new object[] {
                        byteArray,
                        UpPath,
                        Newname,
                        fileName}, this.UploadAvatarUserOperationCompleted, userState);
        }
        
        private void OnUploadAvatarUserOperationCompleted(object arg) {
            if ((this.UploadAvatarUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAvatarUserCompleted(this, new UploadAvatarUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadImageResult UploadImage(TypeImageUploadEnum type, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray) {
            object[] results = this.Invoke("UploadImage", new object[] {
                        type,
                        path,
                        byteArray});
            return ((UploadImageResult)(results[0]));
        }
        
        /// <remarks/>
        public void UploadImageAsync(TypeImageUploadEnum type, string path, byte[] byteArray) {
            this.UploadImageAsync(type, path, byteArray, null);
        }
        
        /// <remarks/>
        public void UploadImageAsync(TypeImageUploadEnum type, string path, byte[] byteArray, object userState) {
            if ((this.UploadImageOperationCompleted == null)) {
                this.UploadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadImageOperationCompleted);
            }
            this.InvokeAsync("UploadImage", new object[] {
                        type,
                        path,
                        byteArray}, this.UploadImageOperationCompleted, userState);
        }
        
        private void OnUploadImageOperationCompleted(object arg) {
            if ((this.UploadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadImageCompleted(this, new UploadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteImage(string path) {
            object[] results = this.Invoke("DeleteImage", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string path) {
            this.DeleteImageAsync(path, null);
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string path, object userState) {
            if ((this.DeleteImageOperationCompleted == null)) {
                this.DeleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageOperationCompleted);
            }
            this.InvokeAsync("DeleteImage", new object[] {
                        path}, this.DeleteImageOperationCompleted, userState);
        }
        
        private void OnDeleteImageOperationCompleted(object arg) {
            if ((this.DeleteImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCompleted(this, new DeleteImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentUpAvatarGif", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentUpAvatarGif([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("AgentUpAvatarGif", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentUpAvatarGifAsync(byte[] byteArray, string UpPath, string Newname) {
            this.AgentUpAvatarGifAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void AgentUpAvatarGifAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.AgentUpAvatarGifOperationCompleted == null)) {
                this.AgentUpAvatarGifOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentUpAvatarGifOperationCompleted);
            }
            this.InvokeAsync("AgentUpAvatarGif", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.AgentUpAvatarGifOperationCompleted, userState);
        }
        
        private void OnAgentUpAvatarGifOperationCompleted(object arg) {
            if ((this.AgentUpAvatarGifCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentUpAvatarGifCompleted(this, new AgentUpAvatarGifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentUploadAvatar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentUploadAvatar([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("AgentUploadAvatar", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentUploadAvatarAsync(byte[] byteArray, string UpPath, string Newname) {
            this.AgentUploadAvatarAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void AgentUploadAvatarAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.AgentUploadAvatarOperationCompleted == null)) {
                this.AgentUploadAvatarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentUploadAvatarOperationCompleted);
            }
            this.InvokeAsync("AgentUploadAvatar", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.AgentUploadAvatarOperationCompleted, userState);
        }
        
        private void OnAgentUploadAvatarOperationCompleted(object arg) {
            if ((this.AgentUploadAvatarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentUploadAvatarCompleted(this, new AgentUploadAvatarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentUploadAvatarSWF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentUploadAvatarSWF([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("AgentUploadAvatarSWF", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentUploadAvatarSWFAsync(byte[] byteArray, string UpPath, string Newname) {
            this.AgentUploadAvatarSWFAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void AgentUploadAvatarSWFAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.AgentUploadAvatarSWFOperationCompleted == null)) {
                this.AgentUploadAvatarSWFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentUploadAvatarSWFOperationCompleted);
            }
            this.InvokeAsync("AgentUploadAvatarSWF", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.AgentUploadAvatarSWFOperationCompleted, userState);
        }
        
        private void OnAgentUploadAvatarSWFOperationCompleted(object arg) {
            if ((this.AgentUploadAvatarSWFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentUploadAvatarSWFCompleted(this, new AgentUploadAvatarSWFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] byteArray, string UpPath, string Newname) {
            this.UploadFileAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFile(string filePath) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        filePath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string filePath) {
            this.DeleteFileAsync(filePath, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string filePath, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        filePath}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAvatarUserInGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadAvatarUserInGame(string strjpg, string UpPath, string Newname, string fileName) {
            object[] results = this.Invoke("UploadAvatarUserInGame", new object[] {
                        strjpg,
                        UpPath,
                        Newname,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAvatarUserInGameAsync(string strjpg, string UpPath, string Newname, string fileName) {
            this.UploadAvatarUserInGameAsync(strjpg, UpPath, Newname, fileName, null);
        }
        
        /// <remarks/>
        public void UploadAvatarUserInGameAsync(string strjpg, string UpPath, string Newname, string fileName, object userState) {
            if ((this.UploadAvatarUserInGameOperationCompleted == null)) {
                this.UploadAvatarUserInGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAvatarUserInGameOperationCompleted);
            }
            this.InvokeAsync("UploadAvatarUserInGame", new object[] {
                        strjpg,
                        UpPath,
                        Newname,
                        fileName}, this.UploadAvatarUserInGameOperationCompleted, userState);
        }
        
        private void OnUploadAvatarUserInGameOperationCompleted(object arg) {
            if ((this.UploadAvatarUserInGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAvatarUserInGameCompleted(this, new UploadAvatarUserInGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBanner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadBanner([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("UploadBanner", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBannerAsync(byte[] byteArray, string UpPath, string Newname) {
            this.UploadBannerAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void UploadBannerAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.UploadBannerOperationCompleted == null)) {
                this.UploadBannerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBannerOperationCompleted);
            }
            this.InvokeAsync("UploadBanner", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.UploadBannerOperationCompleted, userState);
        }
        
        private void OnUploadBannerOperationCompleted(object arg) {
            if ((this.UploadBannerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBannerCompleted(this, new UploadBannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadCaptuteScreenInGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadCaptuteScreenInGame([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string newName) {
            object[] results = this.Invoke("UploadCaptuteScreenInGame", new object[] {
                        byteArray,
                        newName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadCaptuteScreenInGameAsync(byte[] byteArray, string newName) {
            this.UploadCaptuteScreenInGameAsync(byteArray, newName, null);
        }
        
        /// <remarks/>
        public void UploadCaptuteScreenInGameAsync(byte[] byteArray, string newName, object userState) {
            if ((this.UploadCaptuteScreenInGameOperationCompleted == null)) {
                this.UploadCaptuteScreenInGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadCaptuteScreenInGameOperationCompleted);
            }
            this.InvokeAsync("UploadCaptuteScreenInGame", new object[] {
                        byteArray,
                        newName}, this.UploadCaptuteScreenInGameOperationCompleted, userState);
        }
        
        private void OnUploadCaptuteScreenInGameOperationCompleted(object arg) {
            if ((this.UploadCaptuteScreenInGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCaptuteScreenInGameCompleted(this, new UploadCaptuteScreenInGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveJPEG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveJPEG(string strjpg, string pathFile) {
            this.Invoke("SaveJPEG", new object[] {
                        strjpg,
                        pathFile});
        }
        
        /// <remarks/>
        public void SaveJPEGAsync(string strjpg, string pathFile) {
            this.SaveJPEGAsync(strjpg, pathFile, null);
        }
        
        /// <remarks/>
        public void SaveJPEGAsync(string strjpg, string pathFile, object userState) {
            if ((this.SaveJPEGOperationCompleted == null)) {
                this.SaveJPEGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveJPEGOperationCompleted);
            }
            this.InvokeAsync("SaveJPEG", new object[] {
                        strjpg,
                        pathFile}, this.SaveJPEGOperationCompleted, userState);
        }
        
        private void OnSaveJPEGOperationCompleted(object arg) {
            if ((this.SaveJPEGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveJPEGCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TypeImageUploadEnum {
        
        /// <remarks/>
        Avatar,
        
        /// <remarks/>
        Article,
        
        /// <remarks/>
        Association,
        
        /// <remarks/>
        Banner,
        
        /// <remarks/>
        Comment,
        
        /// <remarks/>
        Another,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UploadImageResult {
        
        private bool isSuccessField;
        
        private string messageField;
        
        private string imagePathField;
        
        /// <remarks/>
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string ImagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadAvatarEventImageCompletedEventHandler(object sender, UploadAvatarEventImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAvatarEventImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAvatarEventImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadAssEventImageCompletedEventHandler(object sender, UploadAssEventImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAssEventImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAssEventImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadAssociationImageCompletedEventHandler(object sender, UploadAssociationImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAssociationImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAssociationImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateAssociationImageCompletedEventHandler(object sender, UpdateAssociationImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAssociationImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAssociationImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAssEventImageListCompletedEventHandler(object sender, GetAssEventImageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssEventImageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssEventImageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAssEventImageCompletedEventHandler(object sender, DeleteAssEventImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAssEventImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAssEventImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAvatarWebCompletedEventHandler(object sender, DeleteAvatarWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAvatarWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAvatarWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAvatarUserUpCompletedEventHandler(object sender, DeleteAvatarUserUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAvatarUserUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAvatarUserUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadUserEventImageCompletedEventHandler(object sender, UploadUserEventImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadUserEventImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadUserEventImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadAvatarUserCompletedEventHandler(object sender, UploadAvatarUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAvatarUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAvatarUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadImageCompletedEventHandler(object sender, UploadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadImageResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadImageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteImageCompletedEventHandler(object sender, DeleteImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AgentUpAvatarGifCompletedEventHandler(object sender, AgentUpAvatarGifCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentUpAvatarGifCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentUpAvatarGifCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AgentUploadAvatarCompletedEventHandler(object sender, AgentUploadAvatarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentUploadAvatarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentUploadAvatarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AgentUploadAvatarSWFCompletedEventHandler(object sender, AgentUploadAvatarSWFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentUploadAvatarSWFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentUploadAvatarSWFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadAvatarUserInGameCompletedEventHandler(object sender, UploadAvatarUserInGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAvatarUserInGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAvatarUserInGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadBannerCompletedEventHandler(object sender, UploadBannerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBannerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBannerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UploadCaptuteScreenInGameCompletedEventHandler(object sender, UploadCaptuteScreenInGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCaptuteScreenInGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCaptuteScreenInGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveJPEGCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591