//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace BussinessObject.UploadService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileUploadSvcSoap", Namespace="http://tempuri.org/")]
    public partial class FileUploadSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteAvatarUserUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAvatarUserInGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBannerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadImage_V2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentUpAvatarGifOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentUploadAvatarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveJPEGOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileUploadSvc() {
            this.Url = global::BussinessObject.Properties.Settings.Default.BussinessObject_UploadService_FileUploadSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteAvatarUserUpCompletedEventHandler DeleteAvatarUserUpCompleted;
        
        /// <remarks/>
        public event UploadImageCompletedEventHandler UploadImageCompleted;
        
        /// <remarks/>
        public event UploadAvatarUserInGameCompletedEventHandler UploadAvatarUserInGameCompleted;
        
        /// <remarks/>
        public event DeleteImageCompletedEventHandler DeleteImageCompleted;
        
        /// <remarks/>
        public event UploadBannerCompletedEventHandler UploadBannerCompleted;
        
        /// <remarks/>
        public event UploadImage_V2CompletedEventHandler UploadImage_V2Completed;
        
        /// <remarks/>
        public event AgentUpAvatarGifCompletedEventHandler AgentUpAvatarGifCompleted;
        
        /// <remarks/>
        public event AgentUploadAvatarCompletedEventHandler AgentUploadAvatarCompleted;
        
        /// <remarks/>
        public event SaveJPEGCompletedEventHandler SaveJPEGCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAvatarUserUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAvatarUserUp(string fileName) {
            object[] results = this.Invoke("DeleteAvatarUserUp", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAvatarUserUpAsync(string fileName) {
            this.DeleteAvatarUserUpAsync(fileName, null);
        }
        
        /// <remarks/>
        public void DeleteAvatarUserUpAsync(string fileName, object userState) {
            if ((this.DeleteAvatarUserUpOperationCompleted == null)) {
                this.DeleteAvatarUserUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAvatarUserUpOperationCompleted);
            }
            this.InvokeAsync("DeleteAvatarUserUp", new object[] {
                        fileName}, this.DeleteAvatarUserUpOperationCompleted, userState);
        }
        
        private void OnDeleteAvatarUserUpOperationCompleted(object arg) {
            if ((this.DeleteAvatarUserUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAvatarUserUpCompleted(this, new DeleteAvatarUserUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadImageResult UploadImage(TypeImageUploadEnum type, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray) {
            object[] results = this.Invoke("UploadImage", new object[] {
                        type,
                        path,
                        byteArray});
            return ((UploadImageResult)(results[0]));
        }
        
        /// <remarks/>
        public void UploadImageAsync(TypeImageUploadEnum type, string path, byte[] byteArray) {
            this.UploadImageAsync(type, path, byteArray, null);
        }
        
        /// <remarks/>
        public void UploadImageAsync(TypeImageUploadEnum type, string path, byte[] byteArray, object userState) {
            if ((this.UploadImageOperationCompleted == null)) {
                this.UploadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadImageOperationCompleted);
            }
            this.InvokeAsync("UploadImage", new object[] {
                        type,
                        path,
                        byteArray}, this.UploadImageOperationCompleted, userState);
        }
        
        private void OnUploadImageOperationCompleted(object arg) {
            if ((this.UploadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadImageCompleted(this, new UploadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAvatarUserInGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadAvatarUserInGame(string strjpg, string UpPath, string Newname, string fileName) {
            object[] results = this.Invoke("UploadAvatarUserInGame", new object[] {
                        strjpg,
                        UpPath,
                        Newname,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAvatarUserInGameAsync(string strjpg, string UpPath, string Newname, string fileName) {
            this.UploadAvatarUserInGameAsync(strjpg, UpPath, Newname, fileName, null);
        }
        
        /// <remarks/>
        public void UploadAvatarUserInGameAsync(string strjpg, string UpPath, string Newname, string fileName, object userState) {
            if ((this.UploadAvatarUserInGameOperationCompleted == null)) {
                this.UploadAvatarUserInGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAvatarUserInGameOperationCompleted);
            }
            this.InvokeAsync("UploadAvatarUserInGame", new object[] {
                        strjpg,
                        UpPath,
                        Newname,
                        fileName}, this.UploadAvatarUserInGameOperationCompleted, userState);
        }
        
        private void OnUploadAvatarUserInGameOperationCompleted(object arg) {
            if ((this.UploadAvatarUserInGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAvatarUserInGameCompleted(this, new UploadAvatarUserInGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteImage(string path) {
            object[] results = this.Invoke("DeleteImage", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string path) {
            this.DeleteImageAsync(path, null);
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string path, object userState) {
            if ((this.DeleteImageOperationCompleted == null)) {
                this.DeleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageOperationCompleted);
            }
            this.InvokeAsync("DeleteImage", new object[] {
                        path}, this.DeleteImageOperationCompleted, userState);
        }
        
        private void OnDeleteImageOperationCompleted(object arg) {
            if ((this.DeleteImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCompleted(this, new DeleteImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBanner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadBanner([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("UploadBanner", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBannerAsync(byte[] byteArray, string UpPath, string Newname) {
            this.UploadBannerAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void UploadBannerAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.UploadBannerOperationCompleted == null)) {
                this.UploadBannerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBannerOperationCompleted);
            }
            this.InvokeAsync("UploadBanner", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.UploadBannerOperationCompleted, userState);
        }
        
        private void OnUploadBannerOperationCompleted(object arg) {
            if ((this.UploadBannerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBannerCompleted(this, new UploadBannerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadImage_V2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadImageResult UploadImage_V2(TypeImageUploadEnum type, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, int width) {
            object[] results = this.Invoke("UploadImage_V2", new object[] {
                        type,
                        path,
                        byteArray,
                        width});
            return ((UploadImageResult)(results[0]));
        }
        
        /// <remarks/>
        public void UploadImage_V2Async(TypeImageUploadEnum type, string path, byte[] byteArray, int width) {
            this.UploadImage_V2Async(type, path, byteArray, width, null);
        }
        
        /// <remarks/>
        public void UploadImage_V2Async(TypeImageUploadEnum type, string path, byte[] byteArray, int width, object userState) {
            if ((this.UploadImage_V2OperationCompleted == null)) {
                this.UploadImage_V2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadImage_V2OperationCompleted);
            }
            this.InvokeAsync("UploadImage_V2", new object[] {
                        type,
                        path,
                        byteArray,
                        width}, this.UploadImage_V2OperationCompleted, userState);
        }
        
        private void OnUploadImage_V2OperationCompleted(object arg) {
            if ((this.UploadImage_V2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadImage_V2Completed(this, new UploadImage_V2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentUpAvatarGif", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentUpAvatarGif([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("AgentUpAvatarGif", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentUpAvatarGifAsync(byte[] byteArray, string UpPath, string Newname) {
            this.AgentUpAvatarGifAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void AgentUpAvatarGifAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.AgentUpAvatarGifOperationCompleted == null)) {
                this.AgentUpAvatarGifOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentUpAvatarGifOperationCompleted);
            }
            this.InvokeAsync("AgentUpAvatarGif", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.AgentUpAvatarGifOperationCompleted, userState);
        }
        
        private void OnAgentUpAvatarGifOperationCompleted(object arg) {
            if ((this.AgentUpAvatarGifCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentUpAvatarGifCompleted(this, new AgentUpAvatarGifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentUploadAvatar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AgentUploadAvatar([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArray, string UpPath, string Newname) {
            object[] results = this.Invoke("AgentUploadAvatar", new object[] {
                        byteArray,
                        UpPath,
                        Newname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentUploadAvatarAsync(byte[] byteArray, string UpPath, string Newname) {
            this.AgentUploadAvatarAsync(byteArray, UpPath, Newname, null);
        }
        
        /// <remarks/>
        public void AgentUploadAvatarAsync(byte[] byteArray, string UpPath, string Newname, object userState) {
            if ((this.AgentUploadAvatarOperationCompleted == null)) {
                this.AgentUploadAvatarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentUploadAvatarOperationCompleted);
            }
            this.InvokeAsync("AgentUploadAvatar", new object[] {
                        byteArray,
                        UpPath,
                        Newname}, this.AgentUploadAvatarOperationCompleted, userState);
        }
        
        private void OnAgentUploadAvatarOperationCompleted(object arg) {
            if ((this.AgentUploadAvatarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentUploadAvatarCompleted(this, new AgentUploadAvatarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveJPEG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveJPEG(string strjpg, string pathFile) {
            this.Invoke("SaveJPEG", new object[] {
                        strjpg,
                        pathFile});
        }
        
        /// <remarks/>
        public void SaveJPEGAsync(string strjpg, string pathFile) {
            this.SaveJPEGAsync(strjpg, pathFile, null);
        }
        
        /// <remarks/>
        public void SaveJPEGAsync(string strjpg, string pathFile, object userState) {
            if ((this.SaveJPEGOperationCompleted == null)) {
                this.SaveJPEGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveJPEGOperationCompleted);
            }
            this.InvokeAsync("SaveJPEG", new object[] {
                        strjpg,
                        pathFile}, this.SaveJPEGOperationCompleted, userState);
        }
        
        private void OnSaveJPEGOperationCompleted(object arg) {
            if ((this.SaveJPEGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveJPEGCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34281")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TypeImageUploadEnum {
        
        /// <remarks/>
        Avatar,
        
        /// <remarks/>
        Article,
        
        /// <remarks/>
        Association,
        
        /// <remarks/>
        Banner,
        
        /// <remarks/>
        Comment,
        
        /// <remarks/>
        Another,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34281")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UploadImageResult {
        
        private bool isSuccessField;
        
        private string messageField;
        
        private string imagePathField;
        
        /// <remarks/>
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string ImagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteAvatarUserUpCompletedEventHandler(object sender, DeleteAvatarUserUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAvatarUserUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAvatarUserUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UploadImageCompletedEventHandler(object sender, UploadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadImageResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadImageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UploadAvatarUserInGameCompletedEventHandler(object sender, UploadAvatarUserInGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAvatarUserInGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAvatarUserInGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteImageCompletedEventHandler(object sender, DeleteImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UploadBannerCompletedEventHandler(object sender, UploadBannerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBannerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBannerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UploadImage_V2CompletedEventHandler(object sender, UploadImage_V2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadImage_V2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadImage_V2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadImageResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadImageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AgentUpAvatarGifCompletedEventHandler(object sender, AgentUpAvatarGifCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentUpAvatarGifCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentUpAvatarGifCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AgentUploadAvatarCompletedEventHandler(object sender, AgentUploadAvatarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentUploadAvatarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentUploadAvatarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SaveJPEGCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591